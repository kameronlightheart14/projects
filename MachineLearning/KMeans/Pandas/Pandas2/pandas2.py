# -*- coding: utf-8 -*-
"""pandas2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NsQRT17YWfvvEdyEdJoJN8Ixn21PXZp8

# Pandas 2

## Kameron Lightheart

## MATH 403

## 10/8/19
"""

import numpy as np
import pandas as pd
# from google.colab import files
import matplotlib.pyplot as plt

# Files needed
#      crime_data.csv
#      college.csv
# uploaded = files.upload()

"""# Problem 1"""

def prob1():
    """
    Create 3 visualizations of the crime data set.
    One of the visualizations should be a histogram.
    The visualizations should be clearly labelled and easy to understand.
    """
    # Read in data
    df = pd.read_csv("crime_data.csv")
    df = df.set_index('Year')
    
    # Plot data
    df.plot(y=["Robbery", "Murder", "Aggravated Assault"], title="Robbery, Assault and Murder")
    plt.ylabel("Number of Crimes Committed")

    df[df.columns[5:]].hist(grid=False)
    plt.tight_layout()
    plt.xlabel("Number of Crimes Committed")
    plt.ylabel("Frequency")
    plt.show()
    
    df.plot(y=["Larceny", "Vehicle Theft"], title="Larceny and Vehicle Theft")
    plt.ylabel("Number of Crimes Committed")

# prob1()

"""# Problem 2"""

def prob2():
        """
        Use visualizations to identify if trends exists between Forcible Rape
        and
            1. Violent
            2. Burglary
            3. Aggravated Assault
        Plot each visualization.
        Return a tuple of booleans. Each entry should identify whether that 
        element correlates or not.
        """
        # Read in data
        df = pd.read_csv("crime_data.csv")
        df = df.set_index("Year")

        # Plot data
        pd.plotting.scatter_matrix(df[['Forcible Rape', 'Violent']])
        plt.suptitle("Forcible Rape vs. Violent Crimes")
        pd.plotting.scatter_matrix(df[['Forcible Rape', 'Burglary']])
        plt.suptitle("Forcible Rape vs. Burglary")
        pd.plotting.scatter_matrix(df[['Forcible Rape', 'Aggravated Assault']])
        plt.suptitle("Forcible Rape vs. Aggravated Assault")
        
        return (True, False, True)

# prob2()

"""# Problem 3"""

def prob3():
    """
    Use crime_data.csv to display the following distributions.
        1. The distributions of Burglary, Violent, and Vehicle Theft across all crimes
        2. The distributions of Vehicle Thefts by the number of Robberies
    """
    # Read in data
    df = pd.read_csv("crime_data.csv")
    df = df.set_index("Year")
    
    # Plot data
    df.plot(kind="box", y=["Burglary", "Violent", "Vehicle Theft"], vert=False)
    plt.suptitle("Distributions of Burglary, Violent and Vehicle Theft")
    
    df.plot(kind="Hexbin", x="Vehicle Theft", y="Robbery", gridsize=20, sharex=False)
    plt.suptitle("Distribution of Vehicle Thefts by number of Robberies")

# prob3()

"""# Problem 4"""

def prob4():
    """
    Answer the following questions with the College dataset
    
    1. Hexbin between top10perc and PhD
    2. Looking at applications, acceptance, and enrollment
    3. Looking at s.f.ratio and graduation rate
    4. Private and s.f.ratio
    5. Out of state and room and board
    6. Compare schools
    """
    # Read in data
    df = pd.read_csv("college.csv")
    
    # Plot dat
    pd.plotting.scatter_matrix(df[['Grad.Rate', 'Top10perc']])
    plt.suptitle("Correlation between Graduation Rates and Top 10 Percent Students")
    
    plt.figure(0)
    df.plot(kind="Hexbin", x="PhD", y="Top25perc", gridsize=20, sharex=False)
    plt.suptitle("Distribution of PhD Students by Top 25 Percent Students")
    plt.xlabel("Number of PhD Students")
    plt.ylabel("Students in Top 25 Percent of High School")
    
    plt.figure(1)
    df.plot(kind="box", y=["Grad.Rate"], vert=False)
    plt.suptitle("Graduation Rates Distribution")
    plt.xlabel("Percentage of Graduates vs Enrolled")

# prob4()

